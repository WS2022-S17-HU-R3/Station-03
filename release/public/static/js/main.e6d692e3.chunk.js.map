{"version":3,"sources":["BookingPage.js","dateUtils.js","Calendar.js","ContentBody.js","App.js","reportWebVitals.js","index.js"],"names":["BookingPage","checkIn","checkOut","adults","accomodations","selectedAccomodation","useState","comment","setComment","error","setError","bookingId","setBookingId","onClick","window","location","className","find","a","id","name","htmlFor","value","onChange","e","target","fetch","method","body","JSON","stringify","Date","toJSON","accomodationId","bookingDate","then","res","status","json","text","addDays","date","days","setDate","getDate","getDateRangeAsArray","from","to","dates","push","isSelected","Calendar","accomodation","bookedDates","setBookedDates","setDates","useEffect","response","bookings","map","booking","flat","start","end","getDay","d","getUTCDate","ContentBody","AccomodationList","parse","localStorage","getItem","favourites","setFavourites","favouritesOnly","setFavouritesOnly","setItem","type","checked","filter","acc","includes","src","img","alt","val","v","removeFavourite","addFavourite","description","App","texts","lang","setLang","hu","en","setAccomodations","setSelectedAccomodation","setCheckIn","setCheckOut","setAdults","setBooking","result","data","price","length","style","position","top","right","min","max","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6d692e3.chunk.js","sourcesContent":["import {useState} from \"react\";\r\n\r\nexport function BookingPage({checkIn, checkOut, adults, accomodations, selectedAccomodation}) {\r\n    const [comment, setComment] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [bookingId, setBookingId] = useState(null);\r\n\r\n    function sendBooking() {\r\n        fetch(\"http://localhost:8000/api/bookings\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                checkIn: new Date(checkIn).toJSON(),\r\n                checkOut: new Date(checkOut).toJSON(),\r\n                accomodationId: selectedAccomodation,\r\n                comment,\r\n                bookingDate: new Date().toJSON()\r\n            })\r\n        }).then(res => {\r\n            if (res.status !== 200) {\r\n                res.text().then(setError)\r\n                return;\r\n            }\r\n            res.json().then(({id}) => setBookingId(id));\r\n        })\r\n    }\r\n\r\n    if (bookingId) {\r\n        return <div>\r\n            <h1>Booking saved!</h1>\r\n            <p>Your booking id is: {bookingId}.</p>\r\n            <button onClick={() => window.location = \"/\"} className=\"btn btn-secondary\">Back to home</button>\r\n        </div>\r\n    }\r\n\r\n    if (error) {\r\n        return <div>\r\n            <div className=\"alert alert-danger\">An error happened during your booking! :(</div>\r\n            <pre>{error}</pre>\r\n            <button onClick={() => window.location = \"/\"} className=\"btn btn-secondary\">Back to home</button>\r\n        </div>\r\n    }\r\n\r\n    return <>\r\n        <h1>Send booking for {accomodations.find(a => a.id == selectedAccomodation).name}</h1>\r\n\r\n        <div>\r\n            <b>{checkIn} - {checkOut}</b>\r\n        </div>\r\n\r\n        <div>\r\n            <b>{adults}</b> adults\r\n        </div>\r\n\r\n        <div className=\"form-group mb-4\">\r\n            <label htmlFor=\"comment\">Leave a comment (optional)</label>\r\n            <textarea id=\"comment\" className=\"form-control\" value={comment} onChange={e => setComment(e.target.value)}/>\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary\" onClick={sendBooking}>Send booking</button>\r\n    </>\r\n}","export function diffInDays(from, to) {\r\n    return (to - from) / 1000 / 24 / 3600;\r\n}\r\n\r\nexport function subDays(date, days) {\r\n    date = new Date(date);\r\n    return date.setDate(date.getDate() - days);\r\n}\r\n\r\nexport function addDays(date, days) {\r\n    date = new Date(date);\r\n    return date.setDate(date.getDate() + days);\r\n}\r\n\r\nexport function getDateRangeAsArray(from, to) {\r\n    const dates = [];\r\n    let date = from;\r\n    while (date <= to) {\r\n        dates.push(new Date(date));\r\n        date = addDays(date, 1);\r\n    }\r\n    return dates;\r\n}\r\n\r\nexport function isSelected(checkIn, checkOut, date) {\r\n    return date >= checkIn && date <= checkOut;\r\n}","import {useEffect, useState} from \"react\";\r\nimport {addDays, getDateRangeAsArray, isSelected, subDays} from \"./dateUtils\";\r\n\r\n\r\n\r\nexport function Calendar({accomodation, adults, checkIn, checkOut}) {\r\n    const [bookedDates, setBookedDates] = useState([]);\r\n    const [dates, setDates] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8001/accomodations/\" + accomodation + \"/bookings\").then(response => response.json()).then(bookings => setBookedDates(bookings.map(booking => getDateRangeAsArray(+new Date(booking.checkIn), +new Date(booking.checkOut))).flat()));\r\n    }, [accomodation]);\r\n\r\n    useEffect(() => {\r\n        const start = subDays(checkIn, 10);\r\n        const end = addDays(checkOut, 10);\r\n\r\n        setDates(getDateRangeAsArray(start, end));\r\n    }, [checkOut, checkIn]);\r\n\r\n    return <div className=\"calendar\">\r\n        {\r\n            dates.map(date => <div\r\n                className={`calendar-day calendar-day-of-week-${date.getDay()} ${bookedDates.find(d => +d === +date) ? 'booked' : ''} ${isSelected(checkIn, checkOut, date) ? \"selected\" : \"\"} ${+checkIn === +date ? 'check-in' : ''} ${+checkOut === +date ? 'check-out' : ''}`}>\r\n                {date.getUTCDate()}\r\n            </div>)\r\n        }\r\n    </div>\r\n}","import {BookingPage} from \"./BookingPage\";\r\nimport {Calendar} from \"./Calendar\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nexport function ContentBody({checkIn, checkOut, adults, accomodations, selectedAccomodation, booking}) {\r\n    if (booking) {\r\n        return <BookingPage checkIn={checkIn} checkOut={checkOut} adults={adults} accomodations={accomodations}\r\n                     selectedAccomodation={selectedAccomodation}/>\r\n    }\r\n    if (checkIn && checkOut) {\r\n        return <Calendar accomodation={selectedAccomodation} checkIn={new Date(checkIn)}\r\n                         checkOut={new Date(checkOut)} adults={adults}/>\r\n    }\r\n\r\n    return <AccomodationList accomodations={accomodations} />\r\n}\r\n\r\nfunction AccomodationList({accomodations}){\r\n    const [favourites, setFavourites] = useState(JSON.parse(localStorage.getItem('favs')) || []);\r\n    const [favouritesOnly, setFavouritesOnly] = useState(false);\r\n    useEffect(() => {\r\n        localStorage.setItem('favs', JSON.stringify(favourites));\r\n    }, [favourites]);\r\n\r\n    function addFavourite(accomodation){\r\n        setFavourites(val => [...val, accomodation.id]);\r\n    }\r\n\r\n    function removeFavourite(accomodation){\r\n        setFavourites(val => val.filter(v => v !== accomodation.id));\r\n    }\r\n\r\n    return <>\r\n        <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"favsToggle\" onChange={e => setFavouritesOnly(e.target.checked)} value={favouritesOnly}/>\r\n                <label className=\"custom-control-label\" htmlFor=\"favsToggle\">{favouritesOnly ? \"Show all\" : \"Show favourites\"}</label>\r\n        </div>\r\n        <div className=\"row\">\r\n        {\r\n            accomodations.filter(acc => favouritesOnly ? favourites.includes(acc.id) : true).map(accomodation => <div className=\"col-4 col-md-3 p-2\">\r\n                <div className=\"card h-100\">\r\n                    <img src={\"/img/\" + accomodation.img} className=\"card-img-top\" alt=\"image\"/>\r\n                    {\r\n                        favourites.includes(accomodation.id) ? <button className=\"btn btn-sm btn-secondary\" onClick={() => removeFavourite(accomodation)}>Remove from favourites</button> : <button className=\"btn btn-sm btn-secondary\" onClick={() => addFavourite(accomodation)}>Add to favourites</button>\r\n                    }\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{accomodation.name}</h5>\r\n                        <p className=\"card-text\">{accomodation.description}</p>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        }\r\n    </div>\r\n        </>;\r\n}","import './App.css';\nimport {useEffect, useState} from \"react\";\nimport {ContentBody} from \"./ContentBody\";\nimport {diffInDays} from \"./dateUtils\";\nimport hu from './hu.json';\nimport en from './en.json';\n\nfunction App() {\n    const [lang, setLang] = useState('hu');\n\n    let texts;\n    if(lang === 'hu'){\n        texts = hu;\n    }else{\n        texts = en;\n    }\n\n    const [accomodations, setAccomodations] = useState([]);\n    const [selectedAccomodation, setSelectedAccomodation] = useState(1);\n    const [checkIn, setCheckIn] = useState(\"\");\n    const [checkOut, setCheckOut] = useState(\"\");\n    const [adults, setAdults] = useState(1);\n    const [booking, setBooking] = useState(false);\n\n    useEffect(() => {\n        fetch('http://localhost:8001/accomodations').then(result => result.json()).then(data => setAccomodations(data));\n    }, []);\n\n    const price = accomodations.length === 0 ? 0 : adults * accomodations.find(accomodation => selectedAccomodation == accomodation.id).price * diffInDays(new Date(checkIn), new Date(checkOut));\n\n    function startBooking(){\n        setBooking(true);\n    }\n\n    return (\n        <div>\n            <div className=\"vw-100 vh-100 p-5 bg-light container-fluid\">\n                <div className=\"btn-group btn-group-sm\" style={{position: 'fixed', top: '8px', right: '82px'}}>\n                    <button className=\"btn btn-primary\" onClick={() => setLang('hu')}>Magyar</button>\n                    <button className=\"btn btn-primary\" onClick={() => setLang('en')}>English</button>\n                </div>\n                <div className=\"card rounded-3 p-5 mx-5 mb-5 form-row\">\n                    <div className=\"form-inline d-flex align-items-end\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"checkIn\">{texts[\"select-accomodation\"]}</label>\n                            <select value={selectedAccomodation} onChange={e => setSelectedAccomodation(e.target.value)}\n                                    className=\"form-select\">\n                                {\n                                    accomodations.map(accomodation => <option key={accomodation.id}\n                                                                              value={accomodation.id}>{accomodation.name}</option>)\n                                }\n                            </select>\n                        </div>\n                        <div className=\"form-group px-3\">\n                            <label htmlFor=\"checkIn\">{texts['check-in']}</label>\n                            <input value={checkIn} onChange={e => setCheckIn(e.target.value)} type=\"date\" id=\"checkIn\"\n                                   className=\"form-control\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"checkOut\">{texts['check-out']}</label>\n                            <input value={checkOut} onChange={e => setCheckOut(e.target.value)} type=\"date\"\n                                   id=\"checkOut\" className=\"form-control\"/>\n                        </div>\n                        <div className=\"form-group px-3\">\n                            <label htmlFor=\"adults\">{texts['adults']}</label>\n                            <input value={adults} onChange={e => setAdults(e.target.value)} type=\"number\" min={1}\n                                   max={8} id=\"adults\" className=\"form-control\"/>\n                        </div>\n                        {\n                            selectedAccomodation && checkIn && checkOut && <>\n                                <div>\n                                    <h6>{price} EUR</h6>\n                                </div>\n                                <div className=\"px-3\">\n                                    <button type=\"button\" onClick={startBooking} className=\"btn btn-primary\">Book</button>\n                                </div>\n                            </>\n                        }\n                    </div>\n                </div>\n\n                <div className=\"card p-5 mt-5 mx-5\">\n                <ContentBody checkIn={checkIn} checkOut={checkOut} selectedAccomodation={selectedAccomodation} adults={adults} booking={booking}\n                             accomodations={accomodations} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}